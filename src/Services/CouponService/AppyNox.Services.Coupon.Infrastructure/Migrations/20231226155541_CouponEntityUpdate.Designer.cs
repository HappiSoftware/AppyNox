// <auto-generated />
using System;
using AppyNox.Services.Coupon.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppyNox.Services.Coupon.Infrastructure.Migrations
{
    [DbContext(typeof(CouponDbContext))]
    [Migration("20231226155541_CouponEntityUpdate")]
    partial class CouponEntityUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppyNox.Services.Coupon.Domain.Entities.CouponDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Detail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CouponDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2feaca4-d82a-4d2e-ba5a-667b685212b4"),
                            Code = "EXF50",
                            Detail = "TestDetail"
                        });
                });

            modelBuilder.Entity("AppyNox.Services.Coupon.Domain.Entities.CouponEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<Guid>("CouponDetailEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(true)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Detail")
                        .HasMaxLength(60)
                        .IsUnicode(true)
                        .HasColumnType("character varying(60)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("double precision");

                    b.Property<int>("MinAmount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CouponDetailEntityId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc31782e-a509-4745-a4ec-dc400f9208ac"),
                            Code = "EXF50",
                            CouponDetailEntityId = new Guid("c2feaca4-d82a-4d2e-ba5a-667b685212b4"),
                            Description = "Description",
                            Detail = "Detail1",
                            DiscountAmount = 10.65,
                            MinAmount = 100
                        },
                        new
                        {
                            Id = new Guid("19c4ff11-f4fd-4eb3-9332-517018c735d1"),
                            Code = "EXF60",
                            CouponDetailEntityId = new Guid("c2feaca4-d82a-4d2e-ba5a-667b685212b4"),
                            Description = "Description2",
                            Detail = "Detail2",
                            DiscountAmount = 20.550000000000001,
                            MinAmount = 200
                        });
                });

            modelBuilder.Entity("AppyNox.Services.Coupon.Domain.Entities.CouponEntity", b =>
                {
                    b.HasOne("AppyNox.Services.Coupon.Domain.Entities.CouponDetailEntity", "CouponDetailEntity")
                        .WithMany("Coupons")
                        .HasForeignKey("CouponDetailEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CouponDetailEntity");
                });

            modelBuilder.Entity("AppyNox.Services.Coupon.Domain.Entities.CouponDetailEntity", b =>
                {
                    b.Navigation("Coupons");
                });
#pragma warning restore 612, 618
        }
    }
}
